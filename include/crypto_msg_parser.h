/* Licensed under Apache-2.0 */

#ifndef CRYPTO_MSG_PARSER_H_
#define CRYPTO_MSG_PARSER_H_

/* Generated with cbindgen:0.16.0 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

/**
 * Market type.
 */
typedef enum MarketType {
    Unknown,
    Spot,
    LinearFuture,
    InverseFuture,
    LinearSwap,
    InverseSwap,
    AmericanOption,
    EuropeanOption,
    QuantoFuture,
    QuantoSwap,
    Move,
    BVOL,
} MarketType;

/**
 * Parse a raw trade message into a Vec<TradeMsg> and then convert to a JSON string.
 */
const char *parse_trade(const char *exchange, enum MarketType market_type, const char *msg);

/**
 * Parse a raw level2 orderbook message into a Vec<OrderBookMsg> and then convert to a JSON string.
 */
const char *parse_l2(const char *exchange,
                     enum MarketType market_type,
                     const char *msg,
                     long long timestamp);

/**
 * Parse a raw funding rate message into a Vec<FundingRateMsg> and then convert to a JSON string.
 */
const char *parse_funding_rate(const char *exchange, enum MarketType market_type, const char *msg);

/**
 * Deallocate a string.
 */
void deallocate_string(const char *pointer);

#endif /* CRYPTO_MSG_PARSER_H_ */
